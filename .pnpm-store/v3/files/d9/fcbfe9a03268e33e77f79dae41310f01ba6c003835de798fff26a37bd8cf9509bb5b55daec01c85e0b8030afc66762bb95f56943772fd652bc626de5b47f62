{"version":3,"file":"index.js","sources":["../../../src/index.ts"],"sourcesContent":["export {\n  // BrowserTracing is already exported as part of `Integrations` below (and for the moment will remain so for\n  // backwards compatibility), but that interferes with treeshaking, so we also export it separately\n  // here.\n  BrowserTracing,\n  BROWSER_TRACING_INTEGRATION_ID,\n  IdleTransaction,\n  Span,\n  // eslint-disable-next-line deprecation/deprecation\n  SpanStatus,\n  TRACEPARENT_REGEXP,\n  Transaction,\n  addExtensionMethods,\n  defaultRequestInstrumentationOptions,\n  extractTraceparentData,\n  instrumentOutgoingRequests,\n  getActiveTransaction,\n  hasTracingEnabled,\n  spanStatusfromHttpCode,\n  startIdleTransaction,\n  stripUrlQueryAndFragment,\n} from '@sentry-internal/tracing';\nexport type { RequestInstrumentationOptions, SpanStatusType } from '@sentry-internal/tracing';\n\nimport {\n  addExtensionMethods,\n  Apollo,\n  BrowserTracing,\n  Express,\n  GraphQL,\n  Mongo,\n  Mysql,\n  Postgres,\n  Prisma,\n} from '@sentry-internal/tracing';\n\nexport const Integrations = {\n  BrowserTracing: BrowserTracing,\n  Apollo: Apollo,\n  Express: Express,\n  GraphQL: GraphQL,\n  Mongo: Mongo,\n  Mysql: Mysql,\n  Postgres: Postgres,\n  Prisma: Prisma,\n};\n\n// Treeshakable guard to remove all code related to tracing\ndeclare const __SENTRY_TRACING__: boolean;\n\n// Guard for tree\nif (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n  // We are patching the global object with our hub extension methods\n  addExtensionMethods();\n}\n"],"names":[],"mappings":";;;AAoCA,MAAA,YAAA,GAAA;AACA,EAAA,cAAA,EAAA,cAAA;AACA,EAAA,MAAA,EAAA,MAAA;AACA,EAAA,OAAA,EAAA,OAAA;AACA,EAAA,OAAA,EAAA,OAAA;AACA,EAAA,KAAA,EAAA,KAAA;AACA,EAAA,KAAA,EAAA,KAAA;AACA,EAAA,QAAA,EAAA,QAAA;AACA,EAAA,MAAA,EAAA,MAAA;AACA,EAAA;AACA;AACA;;AAGA;AACA,IAAA,OAAA,kBAAA,KAAA,WAAA,IAAA,kBAAA,EAAA;AACA;AACA,EAAA,mBAAA,EAAA,CAAA;AACA;;;;"}